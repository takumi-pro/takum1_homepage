---
import Layout from "../layouts/Layout.astro";
import PostList from "../components/PostList.astro";
import WorksList from "../components/WorksList.astro";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import logoImg from "../assets/logo/takumi_prof.jpg";
import { getZennPosts } from "../data/zenn-posts";
import { Icon } from "astro-icon/components";

// ローカルのブログ記事を取得
const allLocalPosts = await getCollection("blog");
const localPosts = allLocalPosts.map((post) => ({
	title: post.data.title,
	slug: post.slug,
	date: post.data.pubDate,
	url: `/posts/${post.slug}`,
	isExternal: false,
}));

// Zennの記事を取得 (非同期関数を呼び出し)
const zennPosts = await getZennPosts();
const zennFormattedPosts = zennPosts.map((post) => ({
	...post,
	date: post.pubDate,
	isExternal: true,
	isZenn: true,
}));

// すべての記事を結合して日付順に並べ替え、上位5件を取得
const allPosts = [...localPosts, ...zennFormattedPosts]
	.sort((a, b) => b.date.getTime() - a.date.getTime())
	.slice(0, 5);

const birthDate = new Date("1999-09-27");
const today = new Date();
const ageByYear = today.getFullYear() - birthDate.getFullYear();
const monthDiff = today.getMonth() - birthDate.getMonth();
const dayDiff = today.getDate() - birthDate.getDate();
const isBirthdayPassed = monthDiff > 0 || (monthDiff === 0 && dayDiff >= 0);
const age = isBirthdayPassed ? ageByYear : ageByYear - 1;
---

<Layout>
	<!-- 自己紹介セクション -->
	<section class="mb-8 pt-8 px-4">
		<div class="items-center">
			<div class="mb-2">
				<div class="">
					<Image src={logoImg} alt="takumi's photo" width="120" height="120" class="object-cover border border-blue-gray rounded-full" />
				</div>
			</div>
			<div class="text-left">
				<h2 class="text-2xl font-bold leading-tight"
				>
					takumi
				</h2>
				<span class="font-medium block mb-2">Software Engineer / {age} years old / Tokyo, Japan</span>
				<div class="text-xl flex gap-2">
					<a href="https://github.com/takumi-pro" target="_blank" aria-label="GitHub">
						<Icon class="hover:cursor-pointer" name="uiw:github"/>
					</a>
					<a href="https://x.com/takumidiary" target="_blank" aria-label="X(Twitter)">
						<Icon class="hover:cursor-pointer" name="prime:twitter" />
					</a>
				</div>
			</div>
		</div>
	</section>

	<section class="mb-8 pt-4 px-4">
		<div class="flex justify-between items-center mb-4">
			<h2 class="text-2xl font-bold text-gray-800 font-mplus-rounded underline">About - <span class="text-xl">私について</span></h2>
		</div>
		<div class="text-left">
			<p class="text-gray-600 mb-4 mt-4">
				東京都を拠点にするソフトウェアエンジニアのtakumiです。toB Saasのプロダクト開発を行っています。技術を手段として事業貢献することはもちろんですが、ただの手段ではなく、技術の仕組みを理解し裏側を知ること自体を楽しむことが好きです。
			</p>
            <div class="text-center">
              <a href="/about/" class="inline-block px-6 font-mplus-rounded">
                details →
              </a>
            </div>
		</div>
	</section>

	<!-- できること -->
	<section class="mt-8 pt-4 px-4">
		<div class="flex justify-between items-center mb-4">
		<h2 class="text-2xl font-bold text-gray-800 font-mplus-rounded underline">What I can do - <span class="text-xl">できること</span></h2>
		</div>

		<ul class="list-items">
			<li class="mt-2">
				● 要件が未確定な状態からステークホルダを巻き込んで要件定義
			</li>
			
			<li class="mt-2">
				● 要件定義から適切な技術を選定して設計に落とし込むこと
				<div class="ml-4 text-gray-600 border-l-2 border-blue-200 pl-3">テーブル設計、API設計など</div>
			</li>

			<li class="mt-2">
				● 適切なテストコードを洗い出して自動テストを書くこと
			</li>

			<li class="mt-2">
				● rubyなどのバックエンド言語を用いたAPI実装
			</li>

			<li class="mt-2">
				● バックエンドのパフォーマンス改善
				<div class="ml-4 text-gray-600 border-l-2 border-blue-200 pl-3">スロークエリ改善</div>
				</li>

			<li class="mt-2">
				● 処理効率を考えたバッチ処理設計・実装・テスト
			</li>

			<li class="mt-2">
				● インフラ・アプリケーション部分のトラブルシューティング
			</li>

			<li class="mt-2">
				● 各種DevOps改善活動（dependabot整備、CI/CD改善・導入）
			</li>
		</ul>

		<h3 class="text-xl font-semibold mt-8 mb-4">触れてきた技術</h3>
		<ul class="space-y-2">
			<li class="mt-1">
				<div class="text-gray-800 font-medium">Backend</div>
				<div class="ml-4 mt-2 text-gray-600 border-l-2 border-blue-200 pl-3">Ruby / Ruby on Rails / TypeScript / Rust / PHP / Golang</div>
			</li>
			
			<li class="mt-1">
				<div class="text-gray-800 font-medium">Infrastructure</div>
				<div class="ml-4 mt-2 text-gray-600 border-l-2 border-blue-200 pl-3">GCP, AWS, Terraform, k8s, Docker</div>
			</li>
			
			<li class="mt-1">
				<div class="text-gray-800 font-medium">Database</div>
				<div class="ml-4 mt-2 text-gray-600 border-l-2 border-blue-200 pl-3">PostgreSQL, MySQL</div>
			</li>
			
			<li class="mt-1">
				<div class="text-gray-800 font-medium">Frontend</div>
				<div class="ml-4 mt-2 text-gray-600 border-l-2 border-blue-200 pl-3">React / Next / Vue / TypeScript</div>
			</li>
		</ul>
	</section>

	<!-- career -->
	<section class="mt-8 pt-4 px-4">
		<div class="flex justify-between items-center mb-4">
		<h2 class="text-2xl font-bold text-gray-800 font-mplus-rounded underline">Career - <span class="text-xl">職歴</span></h2>
		</div>
	
		<p>in progress...</p>
	</section>

	<!-- 最新作品セクション -->
	<section class="mt-8 pt-4 px-4">
		<div class="flex justify-between items-center mb-4">
		<h2 class="text-2xl font-bold text-gray-800 font-mplus-rounded underline">Works - <span class="text-xl">作品</span></h2>
		</div>
	
		<WorksList limit={4} showMoreLink={true} />
	</section>
	
	<!-- 最新記事セクション -->
	<section class="mt-8 pt-4 px-4">
		<div class="flex justify-between items-center mb-4">
		<h2 class="text-2xl font-bold text-gray-800 font-mplus-rounded underline">Posts - <span class="text-xl">記事</span></h2>
		</div>
	
		<PostList posts={allPosts} showMoreLink={true} moreLink="/posts" />
	</section>

	<!-- 資格 -->
	<section class="mt-8 pt-4 px-4">
		<div class="flex justify-between items-center mb-4">
		<h2 class="text-2xl font-bold text-gray-800 font-mplus-rounded underline">Certifications - <span class="text-xl">保有資格</span></h2>
		</div>
	
		<ul>
			<li>基本情報技術者試験</li>
			<li>LinuC level1 / level2 / level3</li>
		</ul>
	</section>
	</Layout>
