---
import Layout from "../layouts/Layout.astro";
import PostList from "../components/PostList.astro";
import { getCollection } from "astro:content";
import { getZennPosts } from "../data/zenn-posts";

// 統合された記事の型定義
type CombinedPost = {
	title: string;
	date: Date;
	slug: string;
	categories?: string[];
	isZenn: boolean;
	url: string;
	ai_generated?: boolean; // AI生成フラグを追加
};

// コンテンツコレクションから記事を取得
const posts = await getCollection("blog");

// ローカル記事を変換
const localPosts: CombinedPost[] = posts.map((post) => ({
	title: post.data.title || "",
	date: post.data.pubDate || new Date(),
	slug: post.slug,
	categories: post.data.categories || [],
	isZenn: false,
	url: `/posts/${post.slug}`,
	ai_generated: post.data.ai_generated ?? false, // AI生成フラグを追加
}));

// zenn-posts.tsからZenn記事を取得 (非同期関数を呼び出し)
const zennPosts = await getZennPosts();
const zennCombinedPosts: CombinedPost[] = zennPosts.map((post) => ({
	title: post.title,
	date: post.pubDate,
	slug: post.slug,
	categories: [], // カテゴリー情報がない場合は空配列
	isZenn: true,
	url: post.url,
	ai_generated: false, // Zenn記事はAI生成ではない
}));

// すべての記事を統合し、日付順にソート
const allPosts = [...localPosts, ...zennCombinedPosts].sort(
	(a, b) => b.date.getTime() - a.date.getTime(),
);
---

<Layout title="ブログ記事一覧">
  <main class="max-w-4xl mx-auto py-10 px-4">
    <PostList posts={allPosts} />
  </main>
</Layout>
